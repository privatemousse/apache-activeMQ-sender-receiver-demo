<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
						http://www.springframework.org/schema/context
						http://www.springframework.org/schema/context/spring-context-3.0.xsd
						http://www.springframework.org/schema/util
						http://www.springframework.org/schema/util/spring-util-3.0.xsd
						http://www.springframework.org/schema/aop
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
						http://www.springframework.org/schema/tx
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
						http://www.springframework.org/schema/task
						http://www.springframework.org/schema/task/spring-task-3.1.xsd ">

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
                <value>classpath:mq.properties</value>
            </list>
        </property>
    </bean>
    <import resource="classpath:MQApplicationContext.xml"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <!-- data source configuration -->
        <property name="initialSize" value="10"/>
        <!-- initial connections -->
        <property name="maxActive" value="100"/>
        <!-- MAX connections -->
        <property name="maxIdle" value="5"/>
        <!-- MAX idle connections -->
        <property name="minIdle" value="3"/>
        <!-- MIN idle connections -->
        <!-- 处理mysql 8小时自动断开连接的问题 -->
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        <property name="validationQuery" value="select 1"/>
        <property name="timeBetweenEvictionRunsMillis" value="20000"/>
        <property name="numTestsPerEvictionRun" value="100"/>
        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：
                监控统计用的filter:stat
                日志用的filter:log4j
               防御SQL注入的filter:wall -->
        <property name="filters" value="${druid.filters}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="mapperLocations">
            <list>
                <value>classpath*:mybatis/mappers/record/*.xml</value>
                <value>classpath*:mappers/*.xml</value>
            </list>
        </property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <context:component-scan base-package="com.qizhi.*"/>

    <bean id="brokerConfig" class="com.zjp.mq.config.BrokerConfig">
        <property name="brokerUrl" value="${broker_url}"/>
        <property name="userName" value="${user_name}"/>
        <property name="password" value="${password}"/>
    </bean>

    <bean id="messageConsumer" class="com.qizhi.mq.consumer.MessageConsumer">
        <property name="destName" value="${queue_name_2}"/>
        <property name="transaction" value="false"/>
        <property name="n2" value="true"/>
    </bean>

    <bean id="messageProducer" class="com.zjp.mq.producer.MessageSender">
        <property name="destName" value="${queue_name}"/>
        <property name="n2" value="true"/>
    </bean>
</beans>